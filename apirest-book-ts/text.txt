const authorSchema = new Schema<IAuthor>({
    name: { type: String, required: true },
    biography: { type: String },
    books: [{ type: Schema.Types.ObjectId, ref: 'Book' }]
});


const bookSchema = new Schema<IBook>({
    title: { type: String, required: true },
    image: { type: String, required: true },
    description: { type: String, required: true },
    author_id: [{ type: Schema.Types.ObjectId, ref: 'Author', required: true }],
    category_ids: [{ type: Schema.Types.ObjectId, ref: 'Category', required: true }],
    publication_date: { type: Date, required: true },
    price: { type: Number, required: true },
    state: { type: String, required: true, enum: ['one', 'two'] },
    publisher: { type: String, required: true },
    language: { type: String, required: true },
    reviews: [{ type: Schema.Types.ObjectId, ref: 'Review', default: [] }]
});

const categorySchema = new Schema<ICategory>({
  name: { type: String, required: true },
  description: { type: String, required: true },
});

const reviewSchema = new Schema<IReview>({
    user_id: { type: Schema.Types.ObjectId, ref: 'User', required: true },
    book_id: { type: Schema.Types.ObjectId, ref: 'Book', required: true },
    rating: { type: Number, required: true, min: 1, max: 5 },
    review_text: { type: String, required: true },
    date: { type: Date, required: true, default: Date.now },
});

const userSchema = new Schema<IUser>({
    username: { type: String, required: true, unique: true },
    email: { type: String, required: true, unique: true },
    password: { type: String, required: true },
    reviews: [{ type: Schema.Types.ObjectId, ref: 'Review' }],
    color: { type: String, required: false }
});

mongodump --uri="mongodb://localhost:27017" --db=book-store --out="C:\Users\chris\Documents\mongo"
